---
// Newsletter form component that submits directly to Sanity
---

<div class="newsletter-form-container">
  <form id="newsletter-form" class="space-y-5">
    <!-- Name and Email Row -->
    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
      <div>
        <label for="newsletter-firstname" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">First Name *</label>
        <input
          type="text"
          id="newsletter-firstname"
          name="firstName"
          placeholder="Enter your first name"
          class="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white transition-colors"
          required
        />
      </div>
      <div>
        <label for="newsletter-email" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Email Address *</label>
        <input
          type="email"
          id="newsletter-email"
          name="email"
          placeholder="Enter your email"
          class="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white transition-colors"
          required
        />
        <div id="email-error" class="hidden text-red-500 text-xs mt-1">Please enter a valid email address</div>
      </div>
    </div>

    <!-- Interests Section -->
    <div>
      <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">Interests (Optional)</label>
      <div class="grid grid-cols-2 gap-3">
        {['Express Entry', 'OINP', 'Temporary Residence', 'Policy Updates', 'Immigration News'].map((interest) => (
          <label class="flex items-center gap-3 text-gray-600 dark:text-gray-400 text-sm cursor-pointer hover:text-gray-800 dark:hover:text-gray-200 transition-colors">
            <input 
              type="checkbox" 
              name="interests" 
              value={interest.toLowerCase().replace(' ', '-')} 
              class="rounded border-gray-300 dark:border-gray-600 focus:ring-blue-500" 
            />
            <span>{interest}</span>
          </label>
        ))}
      </div>
    </div>

    <!-- GDPR Consent -->
    <div class="border-t border-gray-200 dark:border-gray-600 pt-4">
      <label class="flex items-start gap-3 text-gray-700 dark:text-gray-300 text-sm cursor-pointer">
        <input
          type="checkbox"
          id="newsletter-gdpr"
          required
          class="rounded border-gray-300 dark:border-gray-600 focus:ring-blue-500 mt-0.5"
        />
        <span>I agree to receive email updates and understand I can unsubscribe at any time. By subscribing, you agree to our <a href="/privacy" class="text-blue-600 hover:text-blue-700 underline">Privacy Policy</a>.</span>
      </label>
    </div>

    <!-- Submit Button -->
    <button
      type="submit"
      id="newsletter-submit"
      class="w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-lg transition-all duration-300 transform hover:scale-[1.02] active:scale-[0.98] disabled:opacity-50 disabled:cursor-not-allowed"
    >
      Subscribe to Newsletter
    </button>

    <!-- Success Message -->
    <div id="newsletter-success" class="hidden text-center p-4 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg">
      <div class="text-green-800 dark:text-green-200 font-medium">✓ Successfully subscribed!</div>
      <div class="text-green-600 dark:text-green-300 text-sm mt-1">Welcome to our newsletter!</div>
    </div>

    <!-- Error Message -->
    <div id="newsletter-error" class="hidden text-center p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg">
      <div id="error-message" class="text-red-800 dark:text-red-200 font-medium">❌ Subscription failed</div>
      <div class="text-red-600 dark:text-red-300 text-sm mt-1">Please try again</div>
    </div>
  </form>
</div>

<script>
  // Newsletter Form Handler
  document.getElementById('newsletter-form')?.addEventListener('submit', async function(e) {
    e.preventDefault();

    const form = e.target as HTMLFormElement;
    const submitBtn = form.querySelector('button[type="submit"]') as HTMLButtonElement;
    const originalText = submitBtn.textContent || 'Subscribe to Newsletter';

    // Get form data
    const formData = new FormData(form);
    const firstName = formData.get('firstName') as string;
    const email = formData.get('email') as string;
    const interests = formData.getAll('interests') as string[];
    const gdprConsent = (document.getElementById('newsletter-gdpr') as HTMLInputElement)?.checked || false;

    // Check GDPR consent
    if (!gdprConsent) {
      showError('Please agree to receive email updates to continue.');
      return;
    }

    // Validate email
    if (!isValidEmail(email)) {
      showError('Please enter a valid email address.');
      return;
    }

    // Update button state
    submitBtn.textContent = 'Subscribing...';
    submitBtn.disabled = true;

    try {
      // Submit to Sanity via form action (we'll create this)
      const response = await fetch('/newsletter-subscribe', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          firstName,
          email,
          interests: interests.length > 0 ? interests : ['general'],
          source: 'website_newsletter',
          status: 'active'
        })
      });

      if (response.ok) {
        // Show success message
        showSuccess();
        form.reset();
      } else {
        const errorData = await response.json();
        throw new Error(errorData.error || 'Subscription failed');
      }

    } catch (error) {
      console.error('Newsletter subscription error:', error);
      const errorMessage = error instanceof Error ? error.message : 'Failed to subscribe. Please try again.';
      showError(errorMessage);
    } finally {
      // Reset button state
      submitBtn.textContent = originalText;
      submitBtn.disabled = false;
    }
  });

  // Email validation function
  function isValidEmail(email: string): boolean {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
  }

  // Show success message
  function showSuccess(): void {
    const successEl = document.getElementById('newsletter-success');
    const errorEl = document.getElementById('newsletter-error');
    
    if (successEl) successEl.classList.remove('hidden');
    if (errorEl) errorEl.classList.add('hidden');
    
    // Hide success message after 5 seconds
    setTimeout(() => {
      if (successEl) successEl.classList.add('hidden');
    }, 5000);
  }

  // Show error message
  function showError(message: string): void {
    const errorMessageEl = document.getElementById('error-message');
    const errorEl = document.getElementById('newsletter-error');
    const successEl = document.getElementById('newsletter-success');
    
    if (errorMessageEl) errorMessageEl.textContent = message;
    if (errorEl) errorEl.classList.remove('hidden');
    if (successEl) successEl.classList.add('hidden');
    
    // Hide error message after 5 seconds
    setTimeout(() => {
      if (errorEl) errorEl.classList.add('hidden');
    }, 5000);
  }
</script>
