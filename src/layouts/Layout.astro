---
export interface Props {
  title: string;
  description?: string;
  image?: string;
  canonical?: string;
}

const { 
  title, 
  description = "Canada's most innovative immigration services. Expert guidance for visas, work permits, and permanent residency.",
  image = "/og-image.jpg",
  canonical = Astro.url.href
} = Astro.props;

const currentYear = new Date().getFullYear();
---

<!DOCTYPE html>
<html lang="en" class="scroll-smooth" x-data="{ darkMode: localStorage.getItem('darkMode') === 'true' }" :class="{ 'dark': darkMode }">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- SEO Meta Tags -->
    <title>{title} | Immigratic - Canada Immigration Services</title>
    <meta name="robots" content="index, follow" />
    <link rel="canonical" href={canonical} />
    
    <!-- Open Graph -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.url)} />
    <meta property="og:url" content={canonical} />
    <meta property="og:site_name" content="Immigratic" />
    
    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={new URL(image, Astro.url)} />
    
    <!-- Schema.org Structured Data -->
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "LegalService",
      "name": "Immigratic",
      "description": description,
      "url": "https://immigratic.ca",
      "logo": "https://immigratic.ca/logo-new.png",
      "address": {
        "@type": "PostalAddress",
        "addressCountry": "CA",
        "addressLocality": "Toronto",
        "addressRegion": "ON"
      },
      "serviceType": "Immigration Services",
      "areaServed": "CA"
    })} />
    
    <!-- Preload Critical Resources -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet" />
    
    <!-- Import Tailwind CSS -->
    <link rel="stylesheet" href="/src/styles/global.css" />
  </head>
  <body class="bg-white dark:bg-gray-900 text-gray-900 dark:text-white font-sans antialiased transition-colors duration-200">
    <!-- Skip to main content for accessibility -->
    <a href="#main-content" class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 bg-primary-600 text-white px-4 py-2 rounded-md z-50">
      Skip to main content
    </a>
    
    <!-- Go to Top Button -->
    <button 
      id="go-to-top"
      class="fixed bottom-8 right-8 w-12 h-12 bg-primary-600 hover:bg-primary-700 text-white rounded-full shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-110 opacity-0 invisible z-50 flex items-center justify-center"
      onclick="window.scrollTo({top: 0, behavior: 'smooth'})"
      aria-label="Go to top of page"
    >
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"></path>
      </svg>
    </button>
    
    <!-- Header -->
    <header class="sticky top-0 z-40 bg-white/95 dark:bg-gray-900/95 backdrop-blur-sm border-b border-gray-200 dark:border-gray-700 transition-colors duration-200">
      <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" aria-label="Main navigation">
        <div class="flex justify-between items-center h-16 min-h-16">
          <!-- Logo -->
          <div class="flex-shrink-0">
            <a href="/" class="flex items-center space-x-2" aria-label="Immigratic Home">
              <img src="/logo-new.png" alt="Immigratic" class="h-6 w-auto" />
            </a>
          </div>
          
          <!-- Desktop Navigation -->
          <div class="hidden md:flex items-center space-x-8">
            <a href="/solutions" class="text-secondary-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors font-medium hover:scale-105 transform transition-all duration-200">Solutions</a>
            <a href="/services" class="text-secondary-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors font-medium hover:scale-105 transform transition-all duration-200">Services</a>
            <a href="/tools" class="text-secondary-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors font-medium hover:scale-105 transform transition-all duration-200">Tools</a>
            <a href="/about" class="text-secondary-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors font-medium hover:scale-105 transform transition-all duration-200">About</a>
            <a href="/contact" class="text-secondary-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors font-medium hover:scale-105 transform transition-all duration-200">Contact</a>
          </div>
          
          <!-- CTA Button & Theme Toggle -->
          <div class="hidden md:flex items-center space-x-4">
            <!-- Free Assessment CTA -->
            <a href="/assessment" class="group relative px-6 py-2 bg-gradient-to-r from-green-500 to-blue-600 text-white font-semibold rounded-lg hover:from-green-600 hover:to-blue-700 transition-all duration-300 transform hover:scale-105 hover:shadow-lg flex items-center space-x-2">
              <span>Free Assessment</span>
              <svg class="w-4 h-4 transform transition-transform duration-200 group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
              </svg>
            </a>
            
            <!-- Theme Toggle -->
            <button 
              @click="darkMode = !darkMode; localStorage.setItem('darkMode', darkMode)"
              class="w-9 h-9 rounded-lg bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors flex items-center justify-center"
              aria-label="Toggle dark mode"
            >
              <!-- Sun icon for dark mode -->
              <svg x-show="darkMode" class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path>
              </svg>
              <!-- Moon icon for light mode -->
              <svg x-show="!darkMode" class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
              </svg>
            </button>
            
            <!-- Portal Dropdown -->
            <div class="relative group">
              <button class="bg-primary-600 text-white px-6 py-2 rounded-lg hover:bg-primary-700 transition-colors font-medium flex items-center space-x-2">
                <span>Portal</span>
                <svg class="w-4 h-4 transform transition-transform duration-200 group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                </svg>
              </button>
              
              <!-- Dropdown Menu -->
              <div class="absolute right-0 mt-2 w-48 bg-white dark:bg-gray-800 rounded-lg shadow-xl border border-gray-200 dark:border-gray-700 py-2 z-50 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 transform scale-95 group-hover:scale-100 -translate-y-2 group-hover:translate-y-0">
                <a href="/client-portal" class="block px-4 py-2 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 hover:text-primary-600 dark:hover:text-primary-400 transition-colors">
                  Client Portal
                </a>
                <a href="/partner-portal" class="block px-4 py-2 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 hover:text-primary-600 dark:hover:text-primary-400 transition-colors">
                  Partner Portal
                </a>
              </div>
            </div>
          </div>
          
          <!-- Mobile menu button -->
          <button 
            class="md:hidden p-2 rounded-md text-secondary-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors"
            aria-label="Toggle mobile menu"
            x-data="{ open: false }"
            @click="open = !open"
          >
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
            </svg>
          </button>
        </div>
        
        <!-- Mobile Navigation -->
        <div 
          class="md:hidden"
          x-data="{ open: false }"
          x-show="open"
          x-transition:enter="transition ease-out duration-200"
          x-transition:enter-start="opacity-0 transform -translate-y-2"
          x-transition:enter-end="opacity-100 transform translate-y-0"
          x-transition:leave="transition ease-in duration-150"
          x-transition:leave-start="opacity-100 transform translate-y-0"
          x-transition:leave-end="opacity-0 transform -translate-y-2"
          style="display: none;"
        >
          <div class="px-2 pt-2 pb-3 space-y-1 bg-white dark:bg-gray-900 border-t border-gray-200 dark:border-gray-700">
            <a href="/solutions" class="block px-3 py-2 text-secondary-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-50 dark:hover:bg-gray-800 rounded-md">Solutions</a>
            <a href="/services" class="block px-3 py-2 text-secondary-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-50 dark:hover:bg-gray-800 rounded-md">Services</a>
            <a href="/tools" class="block px-3 py-2 text-secondary-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-50 dark:hover:bg-gray-800 rounded-md">Tools</a>
            <a href="/about" class="block px-3 py-2 text-secondary-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-50 dark:hover:bg-gray-800 rounded-md">About</a>
            <a href="/contact" class="block px-3 py-2 text-secondary-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-50 dark:hover:bg-gray-800 rounded-md">Contact</a>
            
            <!-- Mobile Free Assessment CTA -->
            <a href="/assessment" class="block px-3 py-2 bg-gradient-to-r from-green-500 to-blue-600 text-white font-semibold rounded-md hover:from-green-600 hover:to-blue-700 transition-all duration-300 text-center">Free Assessment</a>
            
            <!-- Mobile Theme Toggle -->
            <button 
              @click="darkMode = !darkMode; localStorage.setItem('darkMode', darkMode)"
              class="block w-full text-left px-3 py-2 text-secondary-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-50 dark:hover:bg-gray-800 rounded-md"
            >
              <span x-show="!darkMode">🌙 Dark Mode</span>
              <span x-show="darkMode">☀️ Light Mode</span>
            </button>
            
            <a href="/client-portal" class="block px-3 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700">Client Portal</a>
            <a href="/partner-portal" class="block px-3 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700">Partner Portal</a>
          </div>
        </div>
      </nav>
    </header>

    <!-- Main Content -->
    <main id="main-content">
      <slot />
    </main>

    <!-- Footer -->
    <footer class="bg-secondary-600 dark:bg-gray-800 text-white transition-colors duration-200">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
          <!-- Company Info -->
          <div class="col-span-1 md:col-span-2">
            <div class="flex items-center space-x-2 mb-4">
              <img src="/logo-new.png" alt="Immigratic" class="h-6 w-auto" />
            </div>
            <p class="text-gray-300 mb-4 max-w-md">
              Canada's most innovative immigration services platform. Expert guidance for your journey to Canada.
            </p>
            <div class="flex space-x-4">
              <a href="#" class="text-gray-400 hover:text-white transition-colors" aria-label="LinkedIn">
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
                </svg>
              </a>
              <a href="#" class="text-gray-400 hover:text-white transition-colors" aria-label="Twitter">
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
                </svg>
              </a>
            </div>
          </div>
          
          <!-- Services -->
          <div>
            <h3 class="text-lg font-semibold mb-4">Services</h3>
            <ul class="space-y-2 text-gray-300">
              <li><a href="/services/express-entry" class="hover:text-white transition-colors">Express Entry</a></li>
              <li><a href="/services/family-sponsorship" class="hover:text-white transition-colors">Family Sponsorship</a></li>
              <li><a href="/services/work-permits" class="hover:text-white transition-colors">Work Permits</a></li>
              <li><a href="/services/study-permits" class="hover:text-white transition-colors">Study Permits</a></li>
              <li><a href="/services/business-immigration" class="hover:text-white transition-colors">Business Immigration</a></li>
            </ul>
          </div>
          
          <!-- Resources -->
          <div>
            <h3 class="text-lg font-semibold mb-4">Resources</h3>
            <ul class="space-y-2 text-gray-300">
              <li><a href="/resources/guides" class="hover:text-white transition-colors">Immigration Guides</a></li>
              <li><a href="/resources/checklists" class="hover:text-white transition-colors">Document Checklists</a></li>
              <li><a href="/resources/calculator" class="hover:text-white transition-colors">CRS Calculator</a></li>
              <li><a href="/resources/faq" class="hover:text-white transition-colors">FAQ</a></li>
              <li><a href="/blog" class="hover:text-white transition-colors">Blog</a></li>
            </ul>
          </div>
        </div>
        
        <div class="border-t border-gray-800 mt-8 pt-8 flex flex-col md:flex-row justify-between items-center">
          <p class="text-gray-400 text-sm">
            © {currentYear} Immigratic. All rights reserved.
          </p>
          <div class="flex space-x-6 mt-4 md:mt-0">
            <a href="/privacy" class="text-gray-400 hover:text-white text-sm transition-colors">Privacy Policy</a>
            <a href="/terms" class="text-gray-400 hover:text-white text-sm transition-colors">Terms of Service</a>
            <a href="/accessibility" class="text-gray-400 hover:text-white text-sm transition-colors">Accessibility</a>
          </div>
        </div>
      </div>
    </footer>

    <!-- Alpine.js -->
    <script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>
    
    <!-- Go to Top Button Functionality -->
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const goToTopButton = document.getElementById('go-to-top');
        
        // Show button when user scrolls down 300px
        window.addEventListener('scroll', function() {
          if (goToTopButton && window.pageYOffset > 300) {
            goToTopButton.classList.remove('opacity-0', 'invisible');
            goToTopButton.classList.add('opacity-100', 'visible');
          } else if (goToTopButton) {
            goToTopButton.classList.add('opacity-0', 'invisible');
            goToTopButton.classList.remove('opacity-100', 'visible');
          }
        });
        
        // Number Counter Animation
        function animateCounters() {
          const counters = document.querySelectorAll('.counter');
          const speed = 200; // Animation speed in milliseconds
          
          counters.forEach(counter => {
            const target = parseInt(counter.getAttribute('data-target'));
            const increment = target / (speed / 16); // 60fps
            let current = 0;
            
            const updateCounter = () => {
              if (current < target) {
                current += increment;
                if (current > target) current = target;
                counter.textContent = Math.floor(current);
                requestAnimationFrame(updateCounter);
              }
            };
            
            updateCounter();
          });
        }
        
        // Intersection Observer for counter animation
        const observerOptions = {
          threshold: 0.5,
          rootMargin: '0px 0px -100px 0px'
        };
        
        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              // Small delay to ensure animations are visible
              setTimeout(animateCounters, 500);
              observer.unobserve(entry.target);
            }
          });
        }, observerOptions);
        
        // Observe the Industry Leadership section
        const industrySection = document.querySelector('section:has(.metric-box)');
        if (industrySection) {
          observer.observe(industrySection);
        }
        
        // 3D Tilt Effect for Metric Boxes
        function initTiltEffect() {
          const metricBoxes = document.querySelectorAll('.metric-box');
          console.log('Found metric boxes:', metricBoxes.length); // Debug
          
          metricBoxes.forEach(box => {
            if (box instanceof HTMLElement) {
              box.classList.add('tilt-effect');
              console.log('Added tilt effect to:', box); // Debug
              
              box.addEventListener('mousemove', (e) => {
                const rect = box.getBoundingClientRect();
                const x = e.clientX - rect.left;
                const y = e.clientY - rect.top;
                
                const centerX = rect.width / 2;
                const centerY = rect.height / 2;
                
                const rotateX = (y - centerY) / 15; // Increased rotation for visibility
                const rotateY = (centerX - x) / 15; // Increased rotation for visibility
                
                box.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(1.02)`;
              });
              
              box.addEventListener('mouseleave', () => {
                box.style.transform = 'perspective(1000px) rotateX(0deg) rotateY(0deg) scale(1)';
              });
            }
          });
        }
        
        // Initialize tilt effect when DOM is ready
        if (document.readyState === 'loading') {
          document.addEventListener('DOMContentLoaded', initTiltEffect);
        } else {
          initTiltEffect();
        }
        
        // Immigration at Scale Section Animations
        function initImmigrationScaleAnimations() {
          const enterpriseCards = document.querySelectorAll('.enterprise-card');
          const successMetrics = document.querySelectorAll('.success-metric');
          
          // Intersection Observer for enterprise cards
          const cardObserver = new IntersectionObserver((entries) => {
            entries.forEach((entry, index) => {
              if (entry.isIntersecting) {
                setTimeout(() => {
                  entry.target.classList.add('animate-in');
                }, index * 200); // Stagger the animations
                cardObserver.unobserve(entry.target);
              }
            });
          }, {
            threshold: 0.3,
            rootMargin: '0px 0px -50px 0px'
          });
          
          // Intersection Observer for success metrics
          const metricObserver = new IntersectionObserver((entries) => {
            entries.forEach((entry, index) => {
              if (entry.isIntersecting) {
                setTimeout(() => {
                  entry.target.classList.add('visible');
                }, index * 300); // Stagger the metrics
                metricObserver.unobserve(entry.target);
              }
            });
          }, {
            threshold: 0.5,
            rootMargin: '0px 0px -50px 0px'
          });
          
          // Observe elements
          enterpriseCards.forEach(card => cardObserver.observe(card));
          successMetrics.forEach(metric => metricObserver.observe(metric));
        }
        
        // Initialize immigration scale animations
        if (document.readyState === 'loading') {
          document.addEventListener('DOMContentLoaded', initImmigrationScaleAnimations);
        } else {
          initImmigrationScaleAnimations();
        }
        
        // Interactive Technology Dashboard
        function initTechnologyDashboard() {
          const featureCards = document.querySelectorAll('.tech-feature-card');
          const dashboardViews = document.querySelectorAll('.dashboard-view');
          
          featureCards.forEach(card => {
            card.addEventListener('mouseenter', function() {
              const dashboardType = this.getAttribute('data-dashboard');
              
              // Hide all dashboard views
              dashboardViews.forEach(view => {
                view.classList.add('hidden');
                view.classList.remove('active', 'fade-in');
              });
              
              // Show and animate the target dashboard
              const targetDashboard = document.getElementById(dashboardType + '-dashboard');
              if (targetDashboard) {
                targetDashboard.classList.remove('hidden');
                targetDashboard.classList.add('active', 'fade-in');
              }
            });
          });
        }
        
        // Initialize technology dashboard
        if (document.readyState === 'loading') {
          document.addEventListener('DOMContentLoaded', initTechnologyDashboard);
        } else {
          initTechnologyDashboard();
        }
        
        // Interactive Journey Timeline
        function initJourneyTimeline() {
          const journeyCards = document.querySelectorAll('.journey-step-card');
          const progressBar = document.getElementById('journey-progress');
          
          journeyCards.forEach((card, index) => {
            card.addEventListener('mouseenter', function() {
              // Update progress bar
              const progress = ((index + 1) / journeyCards.length) * 100;
              if (progressBar) {
                progressBar.style.width = progress + '%';
              }
              
              // Add active state to current card
              journeyCards.forEach(c => c.classList.remove('active'));
              this.classList.add('active');
            });
            
            card.addEventListener('mouseleave', function() {
              // Reset progress bar to default
              if (progressBar) {
                progressBar.style.width = '25%';
              }
              
              // Remove active state
              this.classList.remove('active');
            });
          });
        }
        
        // Initialize journey timeline
        if (document.readyState === 'loading') {
          document.addEventListener('DOMContentLoaded', initJourneyTimeline);
        } else {
          initJourneyTimeline();
        }
      });
    </script>
  </body>
</html> 