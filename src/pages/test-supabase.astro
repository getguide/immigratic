---
import Layout from '../layouts/Layout.astro';
import { supabase } from '../lib/supabase';
import { getLatestDrawsForAllPrograms, transformDrawData } from '../lib/immigration-data';

// Test Supabase connection
let connectionStatus = 'Testing...';
let immigrationData = null;
let error = null;

try {
  // Test basic connection - get ALL rows to see the full data
  const { data, error: connectionError } = await supabase
    .from('Recent-Draws')
    .select('*')
    .order('draw_date_most_recent', { ascending: false });

  if (connectionError) {
    connectionStatus = 'Connection Failed';
    error = connectionError.message;
  } else {
    connectionStatus = 'Connected Successfully!';
    immigrationData = data;
  }
} catch (err) {
  connectionStatus = 'Connection Error';
  error = err instanceof Error ? err.message : 'Unknown error';
}
---

<Layout title="Supabase Connection Test - Immigratic">
  <div class="min-h-screen bg-gray-50 dark:bg-gray-900 py-12">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-8">
        <h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">
          Supabase Connection Test
        </h1>
        <p class="text-xl text-gray-600 dark:text-gray-300">
          Testing connection to your immigration data database
        </p>
      </div>

      <!-- Connection Status -->
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6 mb-8">
        <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-4">
          Connection Status
        </h2>
        <div class="flex items-center space-x-3">
          <div class={`w-4 h-4 rounded-full ${
            connectionStatus === 'Connected Successfully!' 
              ? 'bg-green-500' 
              : 'bg-red-500'
          }`}></div>
          <span class="text-lg font-medium text-gray-900 dark:text-white">
            {connectionStatus}
          </span>
        </div>
      </div>

      <!-- Error Display -->
      {error && (
        <div class="bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-6 mb-8">
          <h3 class="text-lg font-medium text-red-800 dark:text-red-200 mb-2">
            Error Details
          </h3>
          <p class="text-red-700 dark:text-red-300 font-mono text-sm">
            {error}
          </p>
        </div>
      )}

      <!-- Data Display -->
      {immigrationData && immigrationData.length > 0 && (
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
          <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-4">
            Sample Immigration Data
          </h2>
          <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
              <thead class="bg-gray-50 dark:bg-gray-700">
                <tr>
                  {Object.keys(immigrationData[0]).map((key) => (
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                      {key}
                    </th>
                  ))}
                </tr>
              </thead>
              <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
                {immigrationData.map((row) => (
                  <tr>
                    {Object.values(row).map((value) => (
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white">
                        {typeof value === 'string' && value.length > 50 
                          ? value.substring(0, 50) + '...' 
                          : String(value)
                        }
                      </td>
                    ))}
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      )}

      <!-- No Data Message -->
      {immigrationData && immigrationData.length === 0 && (
        <div class="bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-6">
          <h3 class="text-lg font-medium text-yellow-800 dark:text-yellow-200 mb-2">
            No Data Found
          </h3>
          <p class="text-yellow-700 dark:text-yellow-300">
            The connection is working, but no immigration draw data was found in the 'Recent-Draws' table.
          </p>
        </div>
      )}

      <!-- Transformed Data Display -->
      {immigrationData && immigrationData.length > 0 && (
        <div class="bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg p-6 mt-8">
          <h2 class="text-2xl font-semibold text-green-800 dark:text-green-200 mb-4">
            Transformed Data (User-Friendly)
          </h2>
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {immigrationData.slice(0, 6).map((row) => {
              const transformed = transformDrawData(row);
              return (
                <div class="bg-white dark:bg-gray-800 rounded-lg p-4 border border-green-200 dark:border-green-700">
                  <div class="text-sm font-medium text-green-800 dark:text-green-200 mb-2">
                    {transformed.province} - {transformed.scoringSystem}
                  </div>
                  <div class="text-lg font-bold text-gray-900 dark:text-white mb-1">
                    {transformed.programName}
                  </div>
                  <div class="text-sm text-gray-600 dark:text-gray-400 mb-2">
                    {transformed.drawDate}
                  </div>
                  <div class="text-sm text-gray-700 dark:text-gray-300">
                    <span class="font-medium">Score:</span> {transformed.cutoffScore}
                  </div>
                  <div class="text-sm text-gray-700 dark:text-gray-300">
                    <span class="font-medium">Region:</span> {transformed.region}
                  </div>
                </div>
              );
            })}
          </div>
          <div class="mt-4 text-sm text-green-700 dark:text-green-300">
            Showing first 6 rows of {immigrationData.length} total rows
          </div>
        </div>
      )}

      <!-- Next Steps -->
      <div class="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-6 mt-8">
        <h3 class="text-lg font-medium text-blue-800 dark:text-blue-200 mb-2">
          Next Steps
        </h3>
        <ul class="text-blue-700 dark:text-blue-300 space-y-2">
          <li>• If connection failed, check your Supabase credentials</li>
          <li>• If no data found, check your table name and structure</li>
          <li>• Once working, you can integrate this into your main pages</li>
        </ul>
      </div>
    </div>
  </div>
</Layout>
