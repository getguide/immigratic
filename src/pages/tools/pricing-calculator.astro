---
import Layout from '../../layouts/Layout.astro';
import pricingData from '../../data/pricing.json';

const { immigration_pricing } = pricingData;
---

<Layout 
  title="Immigration Pricing Calculator - Get Instant Quote | Immigratic"
  description="Calculate your immigration service fees instantly. Get transparent pricing for Express Entry, work permits, study permits, and more. Generate professional quotes in seconds."
>
  <!-- Hero Section -->
  <section class="relative py-20 bg-gradient-to-br from-green-600 via-blue-700 to-purple-800 dark:from-green-800 dark:via-blue-900 dark:to-purple-900 overflow-hidden">
    <div class="absolute inset-0 bg-black/20"></div>
    
    <div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <div class="max-w-4xl mx-auto">
        <h1 class="text-4xl md:text-6xl font-bold text-white mb-6">
          Immigration Pricing Calculator
        </h1>
        <p class="text-xl md:text-2xl text-blue-100 mb-8 leading-relaxed">
          Get transparent, instant pricing for your immigration case. No hidden fees, no surprises.
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center items-center">
          <div class="flex items-center gap-2 text-green-200">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
            </svg>
            <span>Instant Quotes</span>
          </div>
          <div class="flex items-center gap-2 text-green-200">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
            </svg>
            <span>Transparent Pricing</span>
          </div>
          <div class="flex items-center gap-2 text-green-200">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
            </svg>
            <span>PDF Export</span>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Main Calculator Section -->
  <section class="py-16 bg-gray-50 dark:bg-gray-900">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="grid lg:grid-cols-3 gap-8">
        
        <!-- Calculator Form -->
        <div class="lg:col-span-2">
          <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-6 md:p-8">
            <div class="mb-8">
              <h2 class="text-2xl md:text-3xl font-bold text-gray-900 dark:text-white mb-4">
                Calculate Your Service Fees
              </h2>
              <p class="text-gray-600 dark:text-gray-400">
                Select your application details below to get an instant, accurate quote for our immigration services.
              </p>
            </div>

            <form id="pricing-calculator" class="space-y-8">
              
              <!-- Step 1: Location & Application Type -->
              <div class="space-y-6">
                <div class="flex items-center gap-3 mb-4">
                  <div class="w-8 h-8 bg-blue-600 text-white rounded-full flex items-center justify-center text-sm font-bold">1</div>
                  <h3 class="text-xl font-semibold text-gray-900 dark:text-white">Application Details</h3>
                </div>

                <!-- Location Selection -->
                <div>
                  <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">
                    Where will your application be processed? <span class="text-red-500">*</span>
                  </label>
                  <div class="grid sm:grid-cols-2 gap-4">
                    <label class="relative cursor-pointer">
                      <input type="radio" name="location" value="inland" class="sr-only peer" required>
                      <div class="p-4 border-2 border-gray-200 dark:border-gray-600 rounded-xl peer-checked:border-blue-500 peer-checked:bg-blue-50 dark:peer-checked:bg-blue-900/20 hover:border-blue-300 transition-all">
                        <div class="flex items-center gap-3">
                          <div class="w-10 h-10 bg-green-100 dark:bg-green-900/30 rounded-lg flex items-center justify-center">
                            <span class="text-2xl">üá®üá¶</span>
                          </div>
                          <div>
                            <div class="font-semibold text-gray-900 dark:text-white">Inland</div>
                            <div class="text-sm text-gray-600 dark:text-gray-400">Processing within Canada</div>
                          </div>
                        </div>
                      </div>
                    </label>
                    
                    <label class="relative cursor-pointer">
                      <input type="radio" name="location" value="outland" class="sr-only peer" required>
                      <div class="p-4 border-2 border-gray-200 dark:border-gray-600 rounded-xl peer-checked:border-blue-500 peer-checked:bg-blue-50 dark:peer-checked:bg-blue-900/20 hover:border-blue-300 transition-all">
                        <div class="flex items-center gap-3">
                          <div class="w-10 h-10 bg-blue-100 dark:bg-blue-900/30 rounded-lg flex items-center justify-center">
                            <span class="text-2xl">üåç</span>
                          </div>
                          <div>
                            <div class="font-semibold text-gray-900 dark:text-white">Outland</div>
                            <div class="text-sm text-gray-600 dark:text-gray-400">Processing outside Canada</div>
                          </div>
                        </div>
                      </div>
                    </label>
                  </div>
                </div>

                <!-- Application Type Selection -->
                <div>
                  <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">
                    What type of application? <span class="text-red-500">*</span>
                  </label>
                  <select name="application_type" id="application-type" class="w-full p-4 border border-gray-300 dark:border-gray-600 rounded-xl bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required>
                    <option value="">Select application type</option>
                    <option value="visitor_visa">Visitor Visa</option>
                    <option value="study_permit">Study Permit</option>
                    <option value="work_permit">Work Permit</option>
                    <option value="express_entry">Express Entry</option>
                    <option value="oinp_job_offer">OINP Job Offer</option>
                    <option value="express_oinp_bundle">Express Entry + OINP Bundle</option>
                    <option value="sponsorship">Family Sponsorship</option>
                  </select>
                  
                  <!-- Application Type Hints -->
                  <div id="application-hints" class="mt-3" style="display: none;">
                    <div id="visitor-visa-hint" class="application-hint bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-3" style="display: none;">
                      <div class="flex items-start gap-2">
                        <svg class="w-5 h-5 text-blue-600 dark:text-blue-400 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                          <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
                        </svg>
                        <div>
                          <div class="text-sm font-medium text-blue-800 dark:text-blue-200">Includes:</div>
                          <div class="text-sm text-blue-700 dark:text-blue-300">Visitor visa, super visa, or visitor record applications</div>
                        </div>
                      </div>
                    </div>
                    
                    <div id="work-permit-hint" class="application-hint bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg p-3" style="display: none;">
                      <div class="flex items-start gap-2">
                        <svg class="w-5 h-5 text-green-600 dark:text-green-400 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                          <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
                        </svg>
                        <div>
                          <div class="text-sm font-medium text-green-800 dark:text-green-200">Includes:</div>
                          <div class="text-sm text-green-700 dark:text-green-300">PGWP, SOWP, or public policy consideration applications</div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              <!-- Step 2: Family Details -->
              <div class="space-y-6">
                <div class="flex items-center gap-3 mb-4">
                  <div class="w-8 h-8 bg-blue-600 text-white rounded-full flex items-center justify-center text-sm font-bold">2</div>
                  <h3 class="text-xl font-semibold text-gray-900 dark:text-white">Family Details</h3>
                </div>

                <!-- Spouse -->
                <div>
                  <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">
                    Do you have a spouse/partner to include?
                  </label>
                  <div class="flex gap-4">
                    <label class="flex items-center cursor-pointer">
                      <input type="radio" name="has_spouse" value="yes" class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                      <span class="ml-2 text-gray-900 dark:text-white">Yes</span>
                    </label>
                    <label class="flex items-center cursor-pointer">
                      <input type="radio" name="has_spouse" value="no" class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600" checked>
                      <span class="ml-2 text-gray-900 dark:text-white">No</span>
                    </label>
                  </div>
                </div>

                <!-- Dependents -->
                <div>
                  <label for="dependents-count" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">
                    Number of dependent children
                  </label>
                  <select name="dependents_count" id="dependents-count" class="w-full p-4 border border-gray-300 dark:border-gray-600 rounded-xl bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                    <option value="0">0 children</option>
                    <option value="1">1 child</option>
                    <option value="2">2 children</option>
                    <option value="3">3 children</option>
                    <option value="4">4 children</option>
                    <option value="5">5+ children</option>
                  </select>
                </div>
              </div>

              <!-- Step 3: Additional Services -->
              <div class="space-y-6">
                <div class="flex items-center gap-3 mb-4">
                  <div class="w-8 h-8 bg-blue-600 text-white rounded-full flex items-center justify-center text-sm font-bold">3</div>
                  <h3 class="text-xl font-semibold text-gray-900 dark:text-white">Additional Services</h3>
                </div>

                <!-- Prior Refusal -->
                <div>
                  <label class="flex items-start gap-3 cursor-pointer">
                    <input type="checkbox" name="prior_refusal" class="mt-1 w-5 h-5 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                    <div>
                      <div class="font-medium text-gray-900 dark:text-white">Prior Refusal Handling</div>
                      <div class="text-sm text-gray-600 dark:text-gray-400">Additional service for cases with previous refusals (+$500)</div>
                    </div>
                  </label>
                </div>
              </div>

            </form>
          </div>
        </div>

        <!-- Price Summary Sidebar -->
        <div class="lg:col-span-1">
          <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-6 sticky top-8">
            <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-6">Price Summary</h3>
            
            <!-- Price Breakdown -->
            <div id="price-breakdown" class="space-y-4 mb-6">
              <div class="text-center py-8 text-gray-500 dark:text-gray-400">
                <div class="w-16 h-16 bg-gray-100 dark:bg-gray-700 rounded-full flex items-center justify-center mx-auto mb-4">
                  <span class="text-2xl">üí∞</span>
                </div>
                <p>Select your application details to see pricing</p>
              </div>
            </div>

            <!-- Total Price -->
            <div id="total-price" class="border-t border-gray-200 dark:border-gray-700 pt-4 mb-6" style="display: none;">
              <div class="flex justify-between items-center">
                <span class="text-lg font-semibold text-gray-900 dark:text-white">Total</span>
                <span class="text-2xl font-bold text-green-600 dark:text-green-400" id="total-amount">$0</span>
              </div>
              <div class="text-sm text-gray-600 dark:text-gray-400 mt-1">CAD (Canadian Dollars)</div>
            </div>

            <!-- Generate Quote Button -->
            <button 
              id="generate-quote" 
              class="w-full bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white font-semibold py-4 px-6 rounded-xl transition-all duration-300 transform hover:scale-105 shadow-lg disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none"
              disabled
            >
              <div class="flex items-center justify-center gap-2">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                </svg>
                Generate Quote
              </div>
            </button>

            <!-- Trust Indicators -->
            <div class="mt-6 pt-6 border-t border-gray-200 dark:border-gray-700">
              <div class="text-sm text-gray-600 dark:text-gray-400 space-y-2">
                <div class="flex items-center gap-2">
                  <svg class="w-4 h-4 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                  </svg>
                  <span>No hidden fees</span>
                </div>
                <div class="flex items-center gap-2">
                  <svg class="w-4 h-4 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                  </svg>
                  <span>Transparent pricing</span>
                </div>
                <div class="flex items-center gap-2">
                  <svg class="w-4 h-4 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                  </svg>
                  <span>Professional service</span>
                </div>
              </div>
            </div>
          </div>
        </div>

      </div>
    </div>
  </section>

  <!-- Quote Modal -->
  <div id="quote-modal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden">
    <div class="flex items-center justify-center min-h-screen p-4">
      <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto">
        <div class="p-6 md:p-8">
          <!-- Modal Header -->
          <div class="flex justify-between items-center mb-6">
            <h3 class="text-2xl font-bold text-gray-900 dark:text-white">Your Immigration Quote</h3>
            <button id="close-modal" class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300">
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>

          <!-- Quote Content -->
          <div id="quote-content">
            <!-- Will be populated by JavaScript -->
          </div>

          <!-- Modal Actions -->
          <div class="flex flex-col sm:flex-row gap-4 mt-8">
            <button id="download-pdf" class="flex-1 bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-xl transition-colors">
              <div class="flex items-center justify-center gap-2">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                </svg>
                Download PDF
              </div>
            </button>
            <button id="contact-us" class="flex-1 bg-green-600 hover:bg-green-700 text-white font-semibold py-3 px-6 rounded-xl transition-colors">
              <div class="flex items-center justify-center gap-2">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                </svg>
                Contact Us
              </div>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>

</Layout>

<script define:vars={{ pricingData: immigration_pricing }}>
  // Pricing calculator functionality
  const form = document.getElementById('pricing-calculator');
  const priceBreakdown = document.getElementById('price-breakdown');
  const totalPrice = document.getElementById('total-price');
  const totalAmount = document.getElementById('total-amount');
  const generateQuoteBtn = document.getElementById('generate-quote');
  const quoteModal = document.getElementById('quote-modal');
  const closeModal = document.getElementById('close-modal');
  const quoteContent = document.getElementById('quote-content');

  let currentCalculation = null;
  let sessionId = `pricing_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  let pageStartTime = Date.now();

  // Tracking functions
  function getUTMParameters() {
    const urlParams = new URLSearchParams(window.location.search);
    return {
      utmSource: urlParams.get('utm_source') || 'direct',
      utmMedium: urlParams.get('utm_medium') || 'website',
      utmCampaign: urlParams.get('utm_campaign') || 'pricing_calculator',
    };
  }

  function getDeviceType() {
    const width = window.innerWidth;
    if (width < 768) return 'mobile';
    if (width < 1024) return 'tablet';
    return 'desktop';
  }

  async function trackPricingUsage(calculationType, calculationResult = null, conversionEvent = null) {
    try {
      const timeSpent = Math.round((Date.now() - pageStartTime) / 1000);
      const utmParams = getUTMParameters();
      
      const trackingData = {
        calculatorType: calculationType,
        sessionId: sessionId,
        calculationResult: calculationResult,
        timeSpentSeconds: timeSpent,
        utmSource: utmParams.utmSource,
        utmMedium: utmParams.utmMedium,
        utmCampaign: utmParams.utmCampaign,
        deviceType: getDeviceType(),
        conversionEvent: conversionEvent
      };

      console.log('üìä Tracking pricing usage:', {
        type: calculationType,
        timeSpent: `${timeSpent}s`,
        device: getDeviceType(),
        utm: utmParams.utmSource
      });

      const response = await fetch('/api/track-calculator-usage', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(trackingData)
      });

      if (response.ok) {
        console.log('‚úÖ Pricing usage tracked successfully');
      } else {
        console.log('‚ö†Ô∏è Failed to track pricing usage:', response.status);
      }
    } catch (error) {
      console.log('‚ö†Ô∏è Failed to track pricing usage:', error);
    }
  }

  // Track session end on page unload
  window.addEventListener('beforeunload', () => {
    if (navigator.sendBeacon) {
      const timeSpent = Math.round((Date.now() - pageStartTime) / 1000);
      const utmParams = getUTMParameters();
      
      const trackingData = JSON.stringify({
        calculatorType: 'pricing_calculator',
        sessionId: sessionId,
        timeSpentSeconds: timeSpent,
        utmSource: utmParams.utmSource,
        utmMedium: utmParams.utmMedium,
        utmCampaign: utmParams.utmCampaign,
        deviceType: getDeviceType(),
        conversionEvent: 'session_ended'
      });
      
      navigator.sendBeacon('/api/track-calculator-usage', trackingData);
    }
  });

  // Application type display names
  const applicationTypeNames = {
    visitor_visa: 'Visitor Visa',
    study_permit: 'Study Permit',
    work_permit: 'Work Permit',
    express_entry: 'Express Entry',
    oinp_job_offer: 'OINP Job Offer',
    express_oinp_bundle: 'Express Entry + OINP Bundle',
    sponsorship: 'Family Sponsorship'
  };

  // Show/hide application type hints
  function updateApplicationHints(applicationType) {
    const hintsContainer = document.getElementById('application-hints');
    const visitorHint = document.getElementById('visitor-visa-hint');
    const workPermitHint = document.getElementById('work-permit-hint');
    
    // Hide all hints first
    document.querySelectorAll('.application-hint').forEach(hint => {
      hint.style.display = 'none';
    });
    
    if (applicationType === 'visitor_visa') {
      hintsContainer.style.display = 'block';
      visitorHint.style.display = 'block';
    } else if (applicationType === 'work_permit') {
      hintsContainer.style.display = 'block';
      workPermitHint.style.display = 'block';
    } else if (applicationType) {
      hintsContainer.style.display = 'none';
    } else {
      hintsContainer.style.display = 'none';
    }
  }

  // Calculate pricing based on form inputs
  function calculatePricing() {
    const formData = new FormData(form);
    const location = formData.get('location');
    const applicationType = formData.get('application_type');
    const hasSpouse = formData.get('has_spouse') === 'yes';
    const dependentsCount = parseInt(formData.get('dependents_count') || '0');
    const priorRefusal = formData.has('prior_refusal');

    // Update hints based on application type
    updateApplicationHints(applicationType);

    if (!location || !applicationType) {
      showEmptyState();
      return;
    }

    // Get service fees
    const principalFee = pricingData.base_fees.principal_applicant[location][applicationType];
    const spouseFee = hasSpouse ? pricingData.base_fees.spouse[location][applicationType] : 0;
    const dependentsFee = dependentsCount > 0 ? pricingData.base_fees.dependents[location][applicationType] * dependentsCount : 0;
    const priorRefusalFee = priorRefusal ? pricingData.add_ons.prior_refusal : 0;

    // Calculate service fees subtotal before tax
    const serviceFeeSubtotal = principalFee + spouseFee + dependentsFee + priorRefusalFee;
    
    // Apply 13% HST only for inland processing
    const hstRate = location === 'inland' ? 0.13 : 0;
    const hstAmount = serviceFeeSubtotal * hstRate;
    const serviceFeeTotal = serviceFeeSubtotal + hstAmount;

    // Get government fees (no tax applied)
    const govPrincipalFee = pricingData.government_fees[applicationType].principal;
    const govSpouseFee = hasSpouse ? pricingData.government_fees[applicationType].spouse : 0;
    const govDependentsFee = dependentsCount > 0 ? pricingData.government_fees[applicationType].dependents * dependentsCount : 0;

    const governmentFeeTotal = govPrincipalFee + govSpouseFee + govDependentsFee;
    const grandTotal = serviceFeeTotal + governmentFeeTotal;

    // Store calculation for quote generation
    currentCalculation = {
      location,
      applicationType,
      hasSpouse,
      dependentsCount,
      priorRefusal,
      breakdown: {
        serviceFees: {
          principal: principalFee,
          spouse: spouseFee,
          dependents: dependentsFee,
          priorRefusal: priorRefusalFee,
          subtotal: serviceFeeSubtotal,
          hstRate: hstRate,
          hstAmount: hstAmount,
          total: serviceFeeTotal
        },
        governmentFees: {
          principal: govPrincipalFee,
          spouse: govSpouseFee,
          dependents: govDependentsFee,
          total: governmentFeeTotal
        },
        grandTotal: grandTotal
      }
    };

    displayPricing(currentCalculation);
    
    // Track pricing calculation
    trackPricingUsage('pricing_calculator', {
      totalPrice: grandTotal,
      serviceFees: serviceFeeTotal,
      serviceFeesBeforeTax: serviceFeeSubtotal,
      hstAmount: hstAmount,
      governmentFees: governmentFeeTotal,
      applicationType: applicationType,
      location: location,
      familySize: 1 + (hasSpouse ? 1 : 0) + dependentsCount
    }, 'price_calculated');
  }

  // Display pricing breakdown
  function displayPricing(calculation) {
    const { breakdown } = calculation;
    
    let html = '';
    
    // Service Fees Section
    html += `
      <div class="mb-4">
        <h4 class="text-sm font-semibold text-gray-900 dark:text-white mb-3 flex items-center gap-2">
          <svg class="w-4 h-4 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
          </svg>
          Service Fees
        </h4>
    `;
    
    // Principal applicant service fee
    html += `
      <div class="flex justify-between items-center py-2 text-sm">
        <span class="text-gray-600 dark:text-gray-400">Principal Applicant</span>
        <span class="font-medium text-gray-900 dark:text-white">$${breakdown.serviceFees.principal.toLocaleString()}</span>
      </div>
    `;

    // Spouse service fee
    if (calculation.hasSpouse) {
      html += `
        <div class="flex justify-between items-center py-2 text-sm">
          <span class="text-gray-600 dark:text-gray-400">Spouse/Partner</span>
          <span class="font-medium text-gray-900 dark:text-white">$${breakdown.serviceFees.spouse.toLocaleString()}</span>
        </div>
      `;
    }

    // Dependents service fee
    if (calculation.dependentsCount > 0) {
      html += `
        <div class="flex justify-between items-center py-2 text-sm">
          <span class="text-gray-600 dark:text-gray-400">${calculation.dependentsCount} Dependent${calculation.dependentsCount > 1 ? 's' : ''}</span>
          <span class="font-medium text-gray-900 dark:text-white">$${breakdown.serviceFees.dependents.toLocaleString()}</span>
        </div>
      `;
    }

    // Prior refusal service fee
    if (calculation.priorRefusal) {
      html += `
        <div class="flex justify-between items-center py-2 text-sm">
          <span class="text-gray-600 dark:text-gray-400">Prior Refusal Handling</span>
          <span class="font-medium text-gray-900 dark:text-white">$${breakdown.serviceFees.priorRefusal.toLocaleString()}</span>
        </div>
      `;
    }

    // Service fees subtotal and HST
    html += `
        <div class="flex justify-between items-center py-2 border-t border-gray-200 dark:border-gray-600 mt-2 pt-2">
          <span class="font-medium text-gray-900 dark:text-white">Service Fees Subtotal</span>
          <span class="font-medium text-gray-900 dark:text-white">$${breakdown.serviceFees.subtotal.toLocaleString()}</span>
        </div>
    `;
    
    // Show HST only for inland processing
    if (breakdown.serviceFees.hstRate > 0) {
      html += `
        <div class="flex justify-between items-center py-2 text-sm">
          <span class="text-gray-600 dark:text-gray-400">HST (${(breakdown.serviceFees.hstRate * 100).toFixed(0)}%)</span>
          <span class="font-medium text-gray-900 dark:text-white">$${breakdown.serviceFees.hstAmount.toLocaleString()}</span>
        </div>
      `;
    }
    
    html += `
        <div class="flex justify-between items-center py-2 border-t border-gray-200 dark:border-gray-600 mt-1 pt-2">
          <span class="font-semibold text-gray-900 dark:text-white">Service Fees Total</span>
          <span class="font-semibold text-blue-600 dark:text-blue-400">$${breakdown.serviceFees.total.toLocaleString()}</span>
        </div>
      </div>
    `;

    // Government Fees Section
    html += `
      <div class="mb-4">
        <h4 class="text-sm font-semibold text-gray-900 dark:text-white mb-3 flex items-center gap-2">
          <svg class="w-4 h-4 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
          </svg>
          Government Fees
        </h4>
    `;

    // Principal applicant government fee
    html += `
      <div class="flex justify-between items-center py-2 text-sm">
        <span class="text-gray-600 dark:text-gray-400">Principal Applicant</span>
        <span class="font-medium text-gray-900 dark:text-white">$${breakdown.governmentFees.principal.toLocaleString()}</span>
      </div>
    `;

    // Spouse government fee
    if (calculation.hasSpouse && breakdown.governmentFees.spouse > 0) {
      html += `
        <div class="flex justify-between items-center py-2 text-sm">
          <span class="text-gray-600 dark:text-gray-400">Spouse/Partner</span>
          <span class="font-medium text-gray-900 dark:text-white">$${breakdown.governmentFees.spouse.toLocaleString()}</span>
        </div>
      `;
    }

    // Dependents government fee
    if (calculation.dependentsCount > 0) {
      html += `
        <div class="flex justify-between items-center py-2 text-sm">
          <span class="text-gray-600 dark:text-gray-400">${calculation.dependentsCount} Dependent${calculation.dependentsCount > 1 ? 's' : ''}</span>
          <span class="font-medium text-gray-900 dark:text-white">$${breakdown.governmentFees.dependents.toLocaleString()}</span>
        </div>
      `;
    }

    // Government fees subtotal
    html += `
        <div class="flex justify-between items-center py-2 border-t border-gray-200 dark:border-gray-600 mt-2 pt-2">
          <span class="font-medium text-gray-900 dark:text-white">Government Fees Subtotal</span>
          <span class="font-semibold text-red-600 dark:text-red-400">$${breakdown.governmentFees.total.toLocaleString()}</span>
        </div>
      </div>
    `;

    priceBreakdown.innerHTML = html;
    totalAmount.textContent = `$${breakdown.grandTotal.toLocaleString()}`;
    totalPrice.style.display = 'block';
    generateQuoteBtn.disabled = false;
  }

  // Show empty state
  function showEmptyState() {
    priceBreakdown.innerHTML = `
      <div class="text-center py-8 text-gray-500 dark:text-gray-400">
        <div class="w-16 h-16 bg-gray-100 dark:bg-gray-700 rounded-full flex items-center justify-center mx-auto mb-4">
          <span class="text-2xl">üí∞</span>
        </div>
        <p>Select your application details to see pricing</p>
      </div>
    `;
    totalPrice.style.display = 'none';
    generateQuoteBtn.disabled = true;
    currentCalculation = null;
  }

  // Generate quote content
  function generateQuote() {
    if (!currentCalculation) return;

    const { breakdown } = currentCalculation;
    const today = new Date().toLocaleDateString('en-CA');
    
    const html = `
      <div class="space-y-6">
        <!-- Quote Header -->
        <div class="text-center border-b border-gray-200 dark:border-gray-700 pb-6">
          <div class="text-3xl font-bold text-gray-900 dark:text-white mb-2">Immigration Service Quote</div>
          <div class="text-gray-600 dark:text-gray-400">Generated on ${today}</div>
        </div>

        <!-- Application Details -->
        <div>
          <h4 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">Application Details</h4>
          <div class="bg-gray-50 dark:bg-gray-700 rounded-lg p-4 space-y-2">
            <div class="flex justify-between">
              <span class="text-gray-600 dark:text-gray-400">Application Type:</span>
              <span class="font-medium text-gray-900 dark:text-white">${applicationTypeNames[currentCalculation.applicationType]}</span>
            </div>
            <div class="flex justify-between">
              <span class="text-gray-600 dark:text-gray-400">Processing Location:</span>
              <span class="font-medium text-gray-900 dark:text-white">${currentCalculation.location.charAt(0).toUpperCase() + currentCalculation.location.slice(1)}</span>
            </div>
            <div class="flex justify-between">
              <span class="text-gray-600 dark:text-gray-400">Family Members:</span>
              <span class="font-medium text-gray-900 dark:text-white">
                ${currentCalculation.hasSpouse ? 'Spouse included' : 'No spouse'}, 
                ${currentCalculation.dependentsCount} dependent${currentCalculation.dependentsCount !== 1 ? 's' : ''}
              </span>
            </div>
          </div>
        </div>

        <!-- Price Breakdown -->
        <div>
          <h4 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">Complete Fee Breakdown</h4>
          
          <!-- Service Fees -->
          <div class="mb-6">
            <h5 class="text-md font-medium text-blue-800 dark:text-blue-200 mb-2 flex items-center gap-2">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
              </svg>
              Service Fees
            </h5>
            <div class="space-y-2">
              <div class="flex justify-between items-center py-1">
                <span class="text-gray-700 dark:text-gray-300">Principal Applicant</span>
                <span class="font-medium text-gray-900 dark:text-white">$${breakdown.serviceFees.principal.toLocaleString()} CAD</span>
              </div>
              
              ${currentCalculation.hasSpouse ? `
                <div class="flex justify-between items-center py-1">
                  <span class="text-gray-700 dark:text-gray-300">Spouse/Partner</span>
                  <span class="font-medium text-gray-900 dark:text-white">$${breakdown.serviceFees.spouse.toLocaleString()} CAD</span>
                </div>
              ` : ''}
              
              ${currentCalculation.dependentsCount > 0 ? `
                <div class="flex justify-between items-center py-1">
                  <span class="text-gray-700 dark:text-gray-300">${currentCalculation.dependentsCount} Dependent${currentCalculation.dependentsCount > 1 ? 's' : ''}</span>
                  <span class="font-medium text-gray-900 dark:text-white">$${breakdown.serviceFees.dependents.toLocaleString()} CAD</span>
                </div>
              ` : ''}
              
              ${currentCalculation.priorRefusal ? `
                <div class="flex justify-between items-center py-1">
                  <span class="text-gray-700 dark:text-gray-300">Prior Refusal Handling</span>
                  <span class="font-medium text-gray-900 dark:text-white">$${breakdown.serviceFees.priorRefusal.toLocaleString()} CAD</span>
                </div>
              ` : ''}
              
              <div class="flex justify-between items-center py-2 border-t border-gray-200 dark:border-gray-600 pt-2">
                <span class="font-medium text-gray-900 dark:text-white">Service Fees Subtotal</span>
                <span class="font-medium text-gray-900 dark:text-white">$${breakdown.serviceFees.subtotal.toLocaleString()} CAD</span>
              </div>
              
              ${breakdown.serviceFees.hstRate > 0 ? `
                <div class="flex justify-between items-center py-1">
                  <span class="text-gray-700 dark:text-gray-300">HST (${(breakdown.serviceFees.hstRate * 100).toFixed(0)}%)</span>
                  <span class="font-medium text-gray-900 dark:text-white">$${breakdown.serviceFees.hstAmount.toLocaleString()} CAD</span>
                </div>
              ` : ''}
              
              <div class="flex justify-between items-center py-2 border-t border-gray-200 dark:border-gray-600 pt-2">
                <span class="font-semibold text-gray-900 dark:text-white">Service Fees Total</span>
                <span class="font-semibold text-blue-600 dark:text-blue-400">$${breakdown.serviceFees.total.toLocaleString()} CAD</span>
              </div>
            </div>
          </div>

          <!-- Government Fees -->
          <div class="mb-6">
            <h5 class="text-md font-medium text-red-800 dark:text-red-200 mb-2 flex items-center gap-2">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
              </svg>
              Government Fees
            </h5>
            <div class="space-y-2">
              <div class="flex justify-between items-center py-1">
                <span class="text-gray-700 dark:text-gray-300">Principal Applicant</span>
                <span class="font-medium text-gray-900 dark:text-white">$${breakdown.governmentFees.principal.toLocaleString()} CAD</span>
              </div>
              
              ${currentCalculation.hasSpouse && breakdown.governmentFees.spouse > 0 ? `
                <div class="flex justify-between items-center py-1">
                  <span class="text-gray-700 dark:text-gray-300">Spouse/Partner</span>
                  <span class="font-medium text-gray-900 dark:text-white">$${breakdown.governmentFees.spouse.toLocaleString()} CAD</span>
                </div>
              ` : ''}
              
              ${currentCalculation.dependentsCount > 0 ? `
                <div class="flex justify-between items-center py-1">
                  <span class="text-gray-700 dark:text-gray-300">${currentCalculation.dependentsCount} Dependent${currentCalculation.dependentsCount > 1 ? 's' : ''}</span>
                  <span class="font-medium text-gray-900 dark:text-white">$${breakdown.governmentFees.dependents.toLocaleString()} CAD</span>
                </div>
              ` : ''}
              
              <div class="flex justify-between items-center py-2 border-t border-gray-200 dark:border-gray-600 pt-2">
                <span class="font-medium text-gray-900 dark:text-white">Government Fees Subtotal</span>
                <span class="font-semibold text-red-600 dark:text-red-400">$${breakdown.governmentFees.total.toLocaleString()} CAD</span>
              </div>
            </div>
          </div>
          
          <!-- Grand Total -->
          <div class="flex justify-between items-center py-4 bg-green-50 dark:bg-green-900/20 rounded-lg px-4 border-2 border-green-200 dark:border-green-800">
            <span class="text-lg font-semibold text-gray-900 dark:text-white">Total Cost (Service + Government)</span>
            <span class="text-2xl font-bold text-green-600 dark:text-green-400">$${breakdown.grandTotal.toLocaleString()} CAD</span>
          </div>
        </div>

        <!-- Important Notes -->
        <div class="bg-blue-50 dark:bg-blue-900/20 rounded-lg p-4">
          <h5 class="font-semibold text-blue-900 dark:text-blue-100 mb-2">Important Notes:</h5>
          <ul class="text-sm text-blue-800 dark:text-blue-200 space-y-1">
            <li>‚Ä¢ This quote is valid for 30 days from the date of generation</li>
            <li>‚Ä¢ Government fees are not included and must be paid separately</li>
            <li>‚Ä¢ Additional services may be required based on case complexity</li>
            <li>‚Ä¢ All fees are in Canadian Dollars (CAD)</li>
          </ul>
        </div>
      </div>
    `;

    quoteContent.innerHTML = html;
    quoteModal.classList.remove('hidden');
    
    // Track quote generation
    trackPricingUsage('pricing_calculator', {
      totalPrice: breakdown.grandTotal,
      serviceFees: breakdown.serviceFees.total,
      serviceFeesBeforeTax: breakdown.serviceFees.subtotal,
      hstAmount: breakdown.serviceFees.hstAmount,
      governmentFees: breakdown.governmentFees.total,
      applicationType: currentCalculation.applicationType,
      location: currentCalculation.location
    }, 'quote_generated');
  }

  // Event listeners
  form.addEventListener('change', calculatePricing);
  form.addEventListener('input', calculatePricing);
  
  generateQuoteBtn.addEventListener('click', generateQuote);
  
  closeModal.addEventListener('click', () => {
    quoteModal.classList.add('hidden');
  });

  // Close modal on outside click
  quoteModal.addEventListener('click', (e) => {
    if (e.target === quoteModal) {
      quoteModal.classList.add('hidden');
    }
  });

  // Contact us button
  document.getElementById('contact-us').addEventListener('click', () => {
    trackPricingUsage('pricing_calculator', null, 'contact_clicked');
    window.location.href = '/contact';
  });

  // Download PDF - Create a clean print version
  document.getElementById('download-pdf').addEventListener('click', () => {
    trackPricingUsage('pricing_calculator', null, 'pdf_downloaded');
    
    if (!currentCalculation) return;
    
    // Create a new window with only the quote content
    const printWindow = window.open('', '_blank', 'width=800,height=600');
    const { breakdown } = currentCalculation;
    const today = new Date().toLocaleDateString('en-CA');
    
    const printContent = `
      <!DOCTYPE html>
      <html>
      <head>
        <title>Immigratic-Immigration-Service-Quote-${today}</title>
        <style>
          body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
          }
          .header { text-align: center; margin-bottom: 30px; border-bottom: 2px solid #e5e7eb; padding-bottom: 20px; }
          .logo { font-size: 24px; font-weight: bold; color: #2563eb; margin-bottom: 10px; }
          .title { font-size: 28px; font-weight: bold; margin-bottom: 5px; }
          .date { color: #6b7280; }
          .section { margin: 30px 0; }
          .section-title { font-size: 18px; font-weight: 600; margin-bottom: 15px; color: #1f2937; }
          .detail-box { background: #f9fafb; padding: 15px; border-radius: 8px; margin-bottom: 20px; }
          .detail-row { display: flex; justify-content: space-between; margin-bottom: 8px; }
          .detail-label { color: #6b7280; }
          .detail-value { font-weight: 500; }
          .breakdown-item { display: flex; justify-content: space-between; padding: 10px 0; border-bottom: 1px solid #e5e7eb; }
          .breakdown-item:last-child { border-bottom: none; }
          .total-row { background: #ecfdf5; padding: 15px; border-radius: 8px; display: flex; justify-content: space-between; align-items: center; font-weight: bold; font-size: 18px; }
          .total-amount { color: #059669; font-size: 24px; }
          .notes { background: #eff6ff; padding: 15px; border-radius: 8px; }
          .notes-title { font-weight: 600; color: #1e40af; margin-bottom: 10px; }
          .notes ul { margin: 0; padding-left: 20px; }
          .notes li { margin-bottom: 5px; color: #1e40af; }
          @media print { 
            body { margin: 0; padding: 15px; }
            .header { page-break-inside: avoid; }
          }
        </style>
      </head>
      <body>
        <div class="header">
          <div class="logo">Immigratic</div>
          <div class="title">Immigration Service Quote</div>
          <div class="date">Generated on ${today}</div>
        </div>

        <div class="section">
          <div class="section-title">Application Details</div>
          <div class="detail-box">
            <div class="detail-row">
              <span class="detail-label">Application Type:</span>
              <span class="detail-value">${applicationTypeNames[currentCalculation.applicationType]}</span>
            </div>
            <div class="detail-row">
              <span class="detail-label">Processing Location:</span>
              <span class="detail-value">${currentCalculation.location.charAt(0).toUpperCase() + currentCalculation.location.slice(1)}</span>
            </div>
            <div class="detail-row">
              <span class="detail-label">Family Members:</span>
              <span class="detail-value">
                ${currentCalculation.hasSpouse ? 'Spouse included' : 'No spouse'}, 
                ${currentCalculation.dependentsCount} dependent${currentCalculation.dependentsCount !== 1 ? 's' : ''}
              </span>
            </div>
          </div>
        </div>

        <div class="section">
          <div class="section-title">Complete Fee Breakdown</div>
          
          <!-- Service Fees -->
          <div style="margin-bottom: 25px;">
            <h4 style="color: #2563eb; font-weight: 600; margin-bottom: 10px; font-size: 16px;">Service Fees</h4>
            <div style="border: 1px solid #e5e7eb; border-radius: 8px; overflow: hidden;">
              <div class="breakdown-item">
                <span>Principal Applicant</span>
                <span>$${breakdown.serviceFees.principal.toLocaleString()} CAD</span>
              </div>
              ${currentCalculation.hasSpouse ? `
                <div class="breakdown-item">
                  <span>Spouse/Partner</span>
                  <span>$${breakdown.serviceFees.spouse.toLocaleString()} CAD</span>
                </div>
              ` : ''}
              ${currentCalculation.dependentsCount > 0 ? `
                <div class="breakdown-item">
                  <span>${currentCalculation.dependentsCount} Dependent${currentCalculation.dependentsCount > 1 ? 's' : ''}</span>
                  <span>$${breakdown.serviceFees.dependents.toLocaleString()} CAD</span>
                </div>
              ` : ''}
              ${currentCalculation.priorRefusal ? `
                <div class="breakdown-item">
                  <span>Prior Refusal Handling</span>
                  <span>$${breakdown.serviceFees.priorRefusal.toLocaleString()} CAD</span>
                </div>
              ` : ''}
              <div class="breakdown-item" style="background: #f8fafc; font-weight: 500;">
                <span>Service Fees Subtotal</span>
                <span>$${breakdown.serviceFees.subtotal.toLocaleString()} CAD</span>
              </div>
              ${breakdown.serviceFees.hstRate > 0 ? `
                <div class="breakdown-item">
                  <span>HST (${(breakdown.serviceFees.hstRate * 100).toFixed(0)}%)</span>
                  <span>$${breakdown.serviceFees.hstAmount.toLocaleString()} CAD</span>
                </div>
              ` : ''}
              <div class="breakdown-item" style="background: #eff6ff; font-weight: 600;">
                <span>Service Fees Total</span>
                <span style="color: #2563eb;">$${breakdown.serviceFees.total.toLocaleString()} CAD</span>
              </div>
            </div>
          </div>

          <!-- Government Fees -->
          <div style="margin-bottom: 25px;">
            <h4 style="color: #dc2626; font-weight: 600; margin-bottom: 10px; font-size: 16px;">Government Fees</h4>
            <div style="border: 1px solid #e5e7eb; border-radius: 8px; overflow: hidden;">
              <div class="breakdown-item">
                <span>Principal Applicant</span>
                <span>$${breakdown.governmentFees.principal.toLocaleString()} CAD</span>
              </div>
              ${currentCalculation.hasSpouse && breakdown.governmentFees.spouse > 0 ? `
                <div class="breakdown-item">
                  <span>Spouse/Partner</span>
                  <span>$${breakdown.governmentFees.spouse.toLocaleString()} CAD</span>
                </div>
              ` : ''}
              ${currentCalculation.dependentsCount > 0 ? `
                <div class="breakdown-item">
                  <span>${currentCalculation.dependentsCount} Dependent${currentCalculation.dependentsCount > 1 ? 's' : ''}</span>
                  <span>$${breakdown.governmentFees.dependents.toLocaleString()} CAD</span>
                </div>
              ` : ''}
              <div class="breakdown-item" style="background: #fef2f2; font-weight: 600;">
                <span>Government Fees Subtotal</span>
                <span style="color: #dc2626;">$${breakdown.governmentFees.total.toLocaleString()} CAD</span>
              </div>
            </div>
          </div>
          
          <!-- Grand Total -->
          <div class="total-row" style="margin-top: 15px; background: #ecfdf5; border: 2px solid #10b981;">
            <span>Total Cost (Service + Government)</span>
            <span class="total-amount">$${breakdown.grandTotal.toLocaleString()} CAD</span>
          </div>
        </div>

        <div class="section">
          <div class="notes">
            <div class="notes-title">Important Notes:</div>
            <ul>
              <li>This quote is valid for 30 days from the date of generation</li>
              <li>Government fees are not included and must be paid separately</li>
              <li>Additional services may be required based on case complexity</li>
              <li>All fees are in Canadian Dollars (CAD)</li>
            </ul>
          </div>
        </div>

        <div style="margin-top: 40px; text-align: center; color: #6b7280; font-size: 14px;">
          <p>Immigratic - Canada's Leading Immigration Platform</p>
          <p>Contact us: immigratic.com/contact</p>
        </div>
      </body>
      </html>
    `;
    
    printWindow.document.write(printContent);
    printWindow.document.close();
    
    // Wait for content to load, then print and close
    printWindow.onload = function() {
      setTimeout(() => {
        printWindow.print();
        printWindow.close();
      }, 250);
    };
  });

  // Initialize
  showEmptyState();
  
  // Track page load
  trackPricingUsage('pricing_calculator', null, 'calculator_opened');
</script>
