---
import Layout from '../../layouts/Layout.astro';
import Breadcrumbs from '../../components/Breadcrumbs.astro';
import NewsletterForm from '../../components/NewsletterForm.astro';
import { client } from '../../lib/sanity';

// Fetch blog posts from Sanity with pagination
const POSTS_PER_PAGE = 12; // Show 12 posts per page initially

  const posts = await client.fetch(`
    *[_type == "post"] | order(publishedAt desc) {
      _id,
      title,
      shortTitle,
      slug,
      excerpt,
      publishedAt,
      featured,
      "mainImage": mainImage.asset->url,
      "authorName": author->name,
      "categories": categories[]->title,
      body
    }
  `);
  
  // Separate featured and regular posts
  const featuredPosts = posts.filter((post: any) => post.featured);
  const regularPosts = posts.filter((post: any) => !post.featured);

// Calculate pagination
const totalPosts = posts.length;
const totalPages = Math.ceil(totalPosts / POSTS_PER_PAGE);
const initialPosts = posts.slice(0, POSTS_PER_PAGE);
---

<Layout title="Immigration Blog | Latest Updates & Insights | Immigratic">
  <Breadcrumbs 
    items={[
      { text: "Home", href: "/" },
      { text: "Blog", current: true }
    ]}
  />

  <!-- Hero Section -->
  <section class="relative bg-gradient-to-br from-blue-900 via-purple-900 to-blue-900 py-20">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <h1 class="text-4xl md:text-6xl font-bold text-white mb-6">
        Immigration
        <span class="block bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent">
          Insights
        </span>
      </h1>
      <p class="text-xl text-blue-100 max-w-3xl mx-auto">
        Stay informed with the latest immigration news, policy updates, and expert insights from our team.
      </p>
    </div>
  </section>

  <!-- Blog Controls -->
  <section class="py-8 bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <!-- Search and Filter Bar -->
      <div class="flex flex-col md:flex-row gap-4 items-center justify-between mb-8">
        <!-- Search -->
        <div class="relative w-full md:w-96">
          <input 
            type="text" 
            id="blog-search"
            placeholder="Search blog posts..."
            class="w-full px-4 py-3 pl-10 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:text-white"
          />
          <svg class="absolute left-3 top-3.5 w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
          </svg>
        </div>
        
        <!-- Category Filter -->
        <div class="flex gap-2 flex-wrap">
          <button 
            class="category-filter px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors"
            data-category="all"
          >
            All Posts
          </button>
          {Array.from(new Set(posts.flatMap((post: any) => post.categories || []))).map((category: unknown) => (
            <button 
              class="category-filter px-4 py-2 rounded-lg bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-500 transition-colors"
              data-category={category}
            >
              {category}
            </button>
          ))}
        </div>
      </div>

      <!-- Blog Stats -->
      <div class="text-center mb-8">
        <p class="text-gray-600 dark:text-gray-400">
          Showing <span id="post-count" class="font-semibold">{initialPosts.length}</span> of <span class="font-semibold">{totalPosts}</span> posts
          {Array.from(new Set(posts.flatMap((post: any) => post.categories || []))).length > 0 && (
            <span> across <span class="font-semibold">{Array.from(new Set(posts.flatMap((post: any) => post.categories || []))).length}</span> categories</span>
          )}
        </p>
      </div>
    </div>
  </section>

  <!-- Featured Posts Section -->
  {featuredPosts.length > 0 && (
    <section class="py-16 bg-white dark:bg-gray-800">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <h2 class="text-3xl font-bold text-gray-900 dark:text-white mb-8 text-center">Featured Posts</h2>
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {featuredPosts.slice(0, 2).map((post: any) => (
            <article class="featured-post bg-gray-50 dark:bg-gray-700 rounded-xl overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-300">
              {post.mainImage && (
                <div class="aspect-video overflow-hidden">
                  <img 
                    src={post.mainImage} 
                    alt={post.title}
                    class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
                  />
                </div>
              )}
              <div class="p-6">
                <div class="flex items-center gap-2 mb-3">
                  {post.categories && post.categories.map((category: string) => (
                    <span class="px-3 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 text-sm rounded-full">
                      {category}
                    </span>
                  ))}
                </div>
                <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-3 line-clamp-2">
                  <a href={`/blog/${post.slug.current}`} class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
                    {post.shortTitle || post.title}
                  </a>
                </h3>
                <p class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-3">{post.excerpt}</p>
                <div class="flex items-center justify-between text-sm text-gray-500 dark:text-gray-400 mb-4">
                  <span>{post.authorName || 'Immigratic Team'}</span>
                  <span>{new Date(post.publishedAt).toLocaleDateString()}</span>
                </div>
                
                <!-- CTA Button -->
                <a 
                  href={`/blog/${post.slug.current}`}
                  class="inline-block bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-lg transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl"
                >
                  Read More →
                </a>
              </div>
            </article>
          ))}
        </div>
      </div>
    </section>
  )}

  <!-- Newsletter Section - Minimal Card with Modal -->
  <section class="py-16 bg-gradient-to-br from-gray-50 to-blue-50 dark:from-gray-800 dark:to-blue-900/20 border-t border-gray-200 dark:border-gray-700">
    <div class="max-w-2xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8 border border-gray-100 dark:border-gray-700">
        <div class="text-4xl mb-4">📧</div>
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-3">Stay Updated with Immigration News</h2>
        <p class="text-gray-600 dark:text-gray-300 mb-6">Get the latest updates on Express Entry draws, OINP invitations, policy changes, and more delivered to your inbox.</p>
        
        <!-- Primary CTA Button -->
        <button
          id="newsletter-cta"
          class="bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-8 rounded-lg transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl"
        >
          Subscribe to Newsletter
        </button>
        
        <p class="text-gray-500 dark:text-gray-400 text-xs mt-3">
          We respect your privacy. Unsubscribe at any time.
        </p>
      </div>
    </div>
  </section>

  <!-- Blog Posts Grid -->
  <section class="py-16 bg-gray-50 dark:bg-gray-900">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      {posts.length > 0 ? (
        <div id="blog-posts-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {initialPosts.map((post: any) => (
            <article class="post-card bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow duration-300">
              {post.mainImage && (
                <div class="aspect-video overflow-hidden">
                  <img 
                    src={post.mainImage} 
                    alt={post.title}
                    class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
                  />
                </div>
              )}
              <div class="p-6">
                <div class="flex items-center gap-2 mb-3">
                  {post.categories && post.categories.map((category: string) => (
                    <span class="px-3 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 text-sm rounded-full">
                      {category}
                    </span>
                  ))}
                </div>
                <h3 class="text-lg font-bold text-gray-900 dark:text-white mb-3 line-clamp-2">
                  <a href={`/blog/${post.slug.current}`} class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
                    {post.shortTitle || post.title}
                  </a>
                </h3>
                <p class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-3">{post.excerpt}</p>
                <div class="flex items-center justify-between text-sm text-gray-500 dark:text-gray-400 mb-4">
                  <span>{post.authorName || 'Immigratic Team'}</span>
                  <span>{new Date(post.publishedAt).toLocaleDateString()}</span>
                </div>
                
                <!-- CTA Button -->
                <a 
                  href={`/blog/${post.slug.current}`}
                  class="inline-block bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-lg transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl"
                >
                  Read More →
                </a>
              </div>
            </article>
          ))}
        </div>
      ) : (
        <div class="text-center py-16">
          <div class="text-6xl mb-4">📝</div>
          <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-2">No Posts Yet</h3>
          <p class="text-gray-600 dark:text-gray-400">Check back soon for our latest immigration insights!</p>
        </div>
      )}

      <!-- Load More Button -->
      {totalPosts > POSTS_PER_PAGE && (
        <div class="text-center mt-12">
          <button
            id="load-more-btn"
            class="bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-8 rounded-lg transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl"
          >
            Load More Posts
          </button>
          <p class="text-gray-500 dark:text-gray-400 text-sm mt-3">
            Showing {initialPosts.length} of {totalPosts} posts
          </p>
        </div>
      )}
    </div>
  </section>

  <!-- Newsletter Modal Popup -->
  <div id="newsletter-modal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden flex items-center justify-center p-4">
    <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-2xl w-full max-w-lg max-h-[90vh] overflow-y-auto transform transition-all duration-300 scale-95 opacity-0" id="modal-content">
      <!-- Modal Header -->
      <div class="flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700 sticky top-0 bg-white dark:bg-gray-800 rounded-t-2xl">
        <h3 class="text-xl font-bold text-gray-900 dark:text-white">Subscribe to Newsletter</h3>
        <button id="close-modal" class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors p-1 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-full">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      
      <!-- Modal Body -->
      <div class="p-6">
        <NewsletterForm />
      </div>
    </div>
  </div>
</Layout>

<script>
  // Blog functionality
  document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('blog-search') as HTMLInputElement;
    const categoryFilters = document.querySelectorAll('.category-filter');
    const loadMoreBtn = document.getElementById('load-more-btn') as HTMLButtonElement;
    const postCount = document.getElementById('post-count');
    
    let currentPage = 1;
    let currentCategory = 'all';
    let currentSearch = '';
    
    // Search functionality
    searchInput?.addEventListener('input', function() {
      currentSearch = this.value.toLowerCase();
      currentPage = 1;
      filterAndDisplayPosts();
    });
    
    // Category filtering
    categoryFilters.forEach(filter => {
      filter.addEventListener('click', function(this: HTMLElement) {
        const category = this.getAttribute('data-category');
        if (category) {
          currentCategory = category;
          currentPage = 1;
          filterAndDisplayPosts();
          
          // Update active state
          categoryFilters.forEach(f => f.classList.remove('active', 'bg-blue-600', 'text-white'));
          categoryFilters.forEach(f => f.classList.add('bg-gray-200', 'dark:bg-gray-600', 'text-gray-700', 'dark:text-gray-300'));
          this.classList.remove('bg-gray-200', 'dark:bg-gray-600', 'text-gray-700', 'dark:text-gray-300');
          this.classList.add('active', 'bg-blue-600', 'text-white');
        }
      });
    });
    
    // Load more functionality
    loadMoreBtn?.addEventListener('click', function() {
      currentPage++;
      filterAndDisplayPosts();
    });
    
    // Set initial active state
    const allPostsFilter = document.querySelector('[data-category="all"]');
    if (allPostsFilter) {
      allPostsFilter.classList.add('active');
    }
    
    // Initialize posts
    filterAndDisplayPosts();
    
    function filterAndDisplayPosts() {
      const allPosts = Array.from(document.querySelectorAll('.post-card'));
      let filteredPosts = allPosts;
      
      // Filter by category
      if (currentCategory !== 'all') {
        filteredPosts = filteredPosts.filter(post => {
          const categories = post.querySelectorAll('.bg-blue-100, .dark\\:bg-blue-900');
          return Array.from(categories).some(cat => 
            (cat as HTMLElement).textContent === currentCategory
          );
        });
      }
      
      // Filter by search
      if (currentSearch) {
        filteredPosts = filteredPosts.filter(post => {
          const title = post.querySelector('h3')?.textContent?.toLowerCase() || '';
          const excerpt = post.querySelector('p')?.textContent?.toLowerCase() || '';
          return title.includes(currentSearch) || excerpt.includes(currentSearch);
        });
      }
      
      // Hide all posts first
      allPosts.forEach(post => (post as HTMLElement).style.display = 'none');
      
      // Show filtered posts up to current page
      const postsToShow = filteredPosts.slice(0, currentPage * 12);
      postsToShow.forEach(post => (post as HTMLElement).style.display = 'block');
      
      // Update post count
      if (postCount) {
        postCount.textContent = postsToShow.length.toString();
      }
      
      // Show/hide load more button
      if (loadMoreBtn) {
        if (postsToShow.length < filteredPosts.length) {
          loadMoreBtn.style.display = 'block';
        } else {
          loadMoreBtn.style.display = 'none';
        }
      }
    }
  });

  // Newsletter Modal Functionality
  document.addEventListener('DOMContentLoaded', function() {
    const newsletterCta = document.getElementById('newsletter-cta') as HTMLButtonElement;
    const newsletterModal = document.getElementById('newsletter-modal') as HTMLDivElement;
    const modalContent = document.getElementById('modal-content') as HTMLDivElement;
    const closeModal = document.getElementById('close-modal') as HTMLButtonElement;

    // Open modal
    newsletterCta?.addEventListener('click', () => {
      newsletterModal.classList.remove('hidden');
      setTimeout(() => {
        modalContent.classList.remove('scale-95', 'opacity-0');
        modalContent.classList.add('scale-100', 'opacity-100');
      }, 10);
    });

    // Close modal
    const closeModalFunction = () => {
      modalContent.classList.add('scale-95', 'opacity-0');
      setTimeout(() => {
        newsletterModal.classList.add('hidden');
      }, 300);
    };

    closeModal?.addEventListener('click', closeModalFunction);

    // Close modal when clicking outside
    newsletterModal?.addEventListener('click', (e) => {
      if (e.target === newsletterModal) {
        closeModalFunction();
      }
    });

    // Close modal on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && !newsletterModal.classList.contains('hidden')) {
        closeModalFunction();
      }
    });
  });
</script>
